/*! crypto-1.0.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
if(typeof KJUR=="undefined"||!KJUR){KJUR={}}if(typeof KJUR.crypto=="undefined"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.Util=new function(){this.DIGESTINFOHEAD={sha1:"3021300906052b0e03021a05000414",sha256:"3031300d060960864801650304020105000420",sha384:"3041300d060960864801650304020205000430",sha512:"3051300d060960864801650304020305000440",md2:"3020300c06082a864886f70d020205000410",md5:"3020300c06082a864886f70d020505000410",ripemd160:"3021300906052b2403020105000414"};this.getDigestInfoHex=function(a,b){if(typeof this.DIGESTINFOHEAD[b]=="undefined"){throw"alg not supported in Util.DIGESTINFOHEAD: "+b}return this.DIGESTINFOHEAD[b]+a};this.getPaddedDigestInfoHex=function(h,a,j){var c=this.getDigestInfoHex(h,a);var d=j/4;var b="0001";var k="00"+c;var g="";var l=d-b.length-k.length;for(var f=0;f<l;f+=2){g+="ff"}var e=b+g+k;return e}};KJUR.crypto.MessageDigest=function(c){var b=null;var a=null;var d=null;this.setAlgAndProvider=function(f,e){if(f=="sha1"&&e=="cryptojs"){this.md=CryptoJS.algo.SHA1.create();this.updateString=function(g){this.md.update(g)};this.updateHex=function(g){var h=CryptoJS.enc.Hex.parse(g);this.md.update(h)};this.digest=function(){var g=this.md.finalize();return g.toString(CryptoJS.enc.Hex)};this.digestString=function(g){this.updateString(g);return this.digest()};this.digestHex=function(g){this.updateHex(g);return this.digest()}}};this.updateString=function(e){throw"updateString(str) not supported for this alg/prov: "+this.algName+"/"+this.provName};this.updateHex=function(e){throw"updateHex(hex) not supported for this alg/prov: "+this.algName+"/"+this.provName};this.digest=function(){throw"digest() not supported for this alg/prov: "+this.algName+"/"+this.provName};this.digestString=function(e){throw"digestString(str) not supported for this alg/prov: "+this.algName+"/"+this.provName};this.digestHex=function(e){throw"digestHex(hex) not supported for this alg/prov: "+this.algName+"/"+this.provName};if(typeof c!="undefined"){if(typeof c.alg!="undefined"){this.algName=c.alg;this.provName=c.prov;this.setAlgAndProvider(c.alg,c.prov)}}};KJUR.crypto.Signature=function(f){var i=null;var j=null;var m=null;var b=null;var l=null;var a=null;var n=null;var d=null;var h=null;var e=null;var c=null;var k=null;var g=null;this._setAlgNames=function(){if(this.algName.match(/^(.+)with(.+)$/)){this.mdAlgName=RegExp.$1.toLowerCase();this.pubkeyAlgName=RegExp.$2.toLowerCase()}};this._zeroPaddingOfSignature=function(t,r){var q="";var o=r/4-t.length;for(var p=0;p<o;p++){q=q+"0"}return q+t};this.setAlgAndProvider=function(p,o){if(p=="SHA1withRSA"&&o=="cryptojs/jsrsa"){this.md=CryptoJS.algo.SHA1.create();this.initSign=function(q){this.prvKey=q};this.updateString=function(q){this.md.update(q)};this.updateHex=function(q){var r=CryptoJS.enc.Hex.parse(q);this.md.update(r)};this.digest=function(){var q=this.md.finalize();return q.toString(CryptoJS.enc.Hex)};this.digestString=function(q){this.updateString(q);return this.digest()};this.digestHex=function(q){this.updateHex(q);return this.digest()};this.sign=function(){var q=KJUR.crypto.Util;var r=this.prvKey.n.bitLength();this.sHashHex=this.md.finalize();this.hDigestInfo=q.getDigestInfoHex(this.sHashHex,this.mdAlgName);this.hPaddedDigestInfo=q.getPaddedDigestInfoHex(this.sHashHex,this.mdAlgName,r);var t=parseBigInt(this.hPaddedDigestInfo,16);this.hoge=t.toString(16);var s=this.prvKey.doPrivate(t);this.hSign=this._zeroPaddingOfSignature(s.toString(16),r);return this.hSign}}};this.initSign=function(o){throw"initSign(prvKey) not supported for this alg:prov="+this.algProvName};this.updateString=function(o){throw"updateString(str) not supported for this alg:prov="+this.algProvName};this.updateHex=function(o){throw"updateHex(hex) not supported for this alg:prov="+this.algProvName};this.signString=function(o){throw"digestString(str) not supported for this alg:prov="+this.algProvName};this.signHex=function(o){throw"digestHex(hex) not supported for this alg:prov="+this.algProvName};this.sign=function(){throw"sign() not supported for this alg:prov="+this.algProvName};if(typeof f!="undefined"){if(typeof f.alg!="undefined"){this.algName=f.alg;this.provName=f.prov;this.algProvName=f.alg+":"+f.prov;this.setAlgAndProvider(f.alg,f.prov);this._setAlgNames()}}};