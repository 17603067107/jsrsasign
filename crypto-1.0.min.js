/*! crypto-1.0.1.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
if(typeof KJUR=="undefined"||!KJUR){KJUR={}}if(typeof KJUR.crypto=="undefined"||!KJUR.crypto){KJUR.crypto={}}KJUR.crypto.Util=new function(){this.DIGESTINFOHEAD={sha1:"3021300906052b0e03021a05000414",sha224:"302d300d06096086480165030402040500041c",sha256:"3031300d060960864801650304020105000420",sha384:"3041300d060960864801650304020205000430",sha512:"3051300d060960864801650304020305000440",md2:"3020300c06082a864886f70d020205000410",md5:"3020300c06082a864886f70d020505000410",ripemd160:"3021300906052b2403020105000414"};this.getDigestInfoHex=function(a,b){if(typeof this.DIGESTINFOHEAD[b]=="undefined"){throw"alg not supported in Util.DIGESTINFOHEAD: "+b}return this.DIGESTINFOHEAD[b]+a};this.getPaddedDigestInfoHex=function(h,a,j){var c=this.getDigestInfoHex(h,a);var d=j/4;if(c.length+22>d){throw"key is too short for SigAlg: keylen="+j+","+a}var b="0001";var k="00"+c;var g="";var l=d-b.length-k.length;for(var f=0;f<l;f+=2){g+="ff"}var e=b+g+k;return e}};KJUR.crypto.MessageDigest=function(params){var md=null;var algName=null;var provName=null;var _CryptoJSMdName={md5:"CryptoJS.algo.MD5",sha1:"CryptoJS.algo.SHA1",sha224:"CryptoJS.algo.SHA224",sha256:"CryptoJS.algo.SHA256",sha384:"CryptoJS.algo.SHA384",sha512:"CryptoJS.algo.SHA512",ripemd160:"CryptoJS.algo.RIPEMD160"};this.setAlgAndProvider=function(alg,prov){if(":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(alg)!=-1&&prov=="cryptojs"){try{this.md=eval(_CryptoJSMdName[alg]).create()}catch(ex){throw"setAlgAndProvider hash alg set fail alg="+alg+"/"+ex}this.updateString=function(str){this.md.update(str)};this.updateHex=function(hex){var wHex=CryptoJS.enc.Hex.parse(hex);this.md.update(wHex)};this.digest=function(){var hash=this.md.finalize();return hash.toString(CryptoJS.enc.Hex)};this.digestString=function(str){this.updateString(str);return this.digest()};this.digestHex=function(hex){this.updateHex(hex);return this.digest()}}};this.updateString=function(str){throw"updateString(str) not supported for this alg/prov: "+this.algName+"/"+this.provName};this.updateHex=function(hex){throw"updateHex(hex) not supported for this alg/prov: "+this.algName+"/"+this.provName};this.digest=function(){throw"digest() not supported for this alg/prov: "+this.algName+"/"+this.provName};this.digestString=function(str){throw"digestString(str) not supported for this alg/prov: "+this.algName+"/"+this.provName};this.digestHex=function(hex){throw"digestHex(hex) not supported for this alg/prov: "+this.algName+"/"+this.provName};if(typeof params!="undefined"){if(typeof params.alg!="undefined"){this.algName=params.alg;this.provName=params.prov;this.setAlgAndProvider(params.alg,params.prov)}}};KJUR.crypto.Signature=function(f){var i=null;var k=null;var n=null;var b=null;var m=null;var a=null;var o=null;var d=null;var h=null;var e=null;var c=null;var l=null;var g=null;this._setAlgNames=function(){if(this.algName.match(/^(.+)with(.+)$/)){this.mdAlgName=RegExp.$1.toLowerCase();this.pubkeyAlgName=RegExp.$2.toLowerCase()}};this._zeroPaddingOfSignature=function(u,t){var r="";var p=t/4-u.length;for(var q=0;q<p;q++){r=r+"0"}return r+u};this.setAlgAndProvider=function(r,q){this._setAlgNames();if(q!="cryptojs/jsrsa"){throw"provider not supported: "+q}if(":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(this.mdAlgName)!=-1){try{this.md=new KJUR.crypto.MessageDigest({alg:this.mdAlgName,prov:"cryptojs"})}catch(p){throw"setAlgAndProvider hash alg set fail alg="+this.mdAlgName+"/"+p}this.initSign=function(s){this.prvKey=s};this.updateString=function(s){this.md.updateString(s)};this.updateHex=function(s){this.md.updateHex(s)};this.sign=function(){var s=KJUR.crypto.Util;var t=this.prvKey.n.bitLength();this.sHashHex=this.md.digest();this.hDigestInfo=s.getDigestInfoHex(this.sHashHex,this.mdAlgName);this.hPaddedDigestInfo=s.getPaddedDigestInfoHex(this.sHashHex,this.mdAlgName,t);var v=parseBigInt(this.hPaddedDigestInfo,16);this.hoge=v.toString(16);var u=this.prvKey.doPrivate(v);this.hSign=this._zeroPaddingOfSignature(u.toString(16),t);return this.hSign};this.signString=function(s){this.updateString(s);this.sign()};this.signHex=function(s){this.updateHex(s);this.sign()}}};this.initSign=function(p){throw"initSign(prvKey) not supported for this alg:prov="+this.algProvName};this.updateString=function(p){throw"updateString(str) not supported for this alg:prov="+this.algProvName};this.updateHex=function(p){throw"updateHex(hex) not supported for this alg:prov="+this.algProvName};this.signString=function(p){throw"digestString(str) not supported for this alg:prov="+this.algProvName};this.signHex=function(p){throw"digestHex(hex) not supported for this alg:prov="+this.algProvName};this.sign=function(){throw"sign() not supported for this alg:prov="+this.algProvName};if(typeof f!="undefined"){if(typeof f.alg!="undefined"){this.algName=f.alg;this.provName=f.prov;this.algProvName=f.alg+":"+f.prov;this.setAlgAndProvider(f.alg,f.prov);this._setAlgNames()}if(typeof f.prvkeypem!="undefined"){if(typeof f.prvkeypas!="undefined"){throw"both prvkeypem and prvkeypas parameters not supported"}else{try{var i=new RSAKey();i.readPrivateKeyFromPEMString(f.prvkeypem);this.initSign(i)}catch(j){throw"fatal error to load pem private key: "+j}}}}};