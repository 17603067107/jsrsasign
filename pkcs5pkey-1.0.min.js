/*! pkcs5pkey-1.0.1.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
var PKCS5PKEY=function(){var h=function(i,k,j){return a(CryptoJS.AES,i,k,j)};var d=function(i,k,j){return a(CryptoJS.TripleDES,i,k,j)};var a=function(l,q,n,j){var k=CryptoJS.enc.Hex.parse(q);var p=CryptoJS.enc.Hex.parse(n);var i=CryptoJS.enc.Hex.parse(j);var m={};m.key=p;m.iv=i;m.ciphertext=k;var o=l.decrypt(m,p,{iv:i});return CryptoJS.enc.Hex.stringify(o)};var f=function(i){return e[i]["proc"]};var e={"AES-256-CBC":{proc:h,keylen:32,ivlen:16},"AES-192-CBC":{proc:h,keylen:24,ivlen:16},"AES-128-CBC":{proc:h,keylen:16,ivlen:16},"DES-EDE3-CBC":{proc:d,keylen:24,ivlen:8}};var c=function(l){var m={};if(l.match(new RegExp("DEK-Info: ([^,]+),([0-9A-Fa-f]+)","m"))){m.cipher=RegExp.$1;m.ivsalt=RegExp.$2}if(l.match(new RegExp("-----BEGIN ([A-Z]+) PRIVATE KEY-----"))){m.type=RegExp.$1}var k=-1;var n=0;if(l.indexOf("\r\n\r\n")!=-1){k=l.indexOf("\r\n\r\n");n=2}if(l.indexOf("\n\n")!=-1){k=l.indexOf("\n\n");n=1}var j=l.indexOf("-----END");if(k!=-1&&j!=-1){var i=l.substring(k+n*2,j-n);i=i.replace(/\s+/g,"");m.data=i}return m};var g=function(j,r,i){var o=i.substring(0,16);var m=CryptoJS.enc.Hex.parse(o);var k=CryptoJS.enc.Utf8.parse(r);var n=e[j]["keylen"]+e[j]["ivlen"];var q="";var p=null;for(;;){var l=CryptoJS.algo.MD5.create();if(p!=null){l.update(p)}l.update(k);l.update(m);p=l.finalize();q=q+CryptoJS.enc.Hex.stringify(p);if(q.length>=n*2){break}}var s={};s.keyhex=q.substr(0,e[j]["keylen"]*2);s.ivhex=q.substr(e[j]["keylen"]*2,e[j]["ivlen"]*2);return s};var b=function(i,o,l,p){var m=CryptoJS.enc.Base64.parse(i);var j=CryptoJS.enc.Hex.stringify(m);var n=e[o]["proc"];var k=n(j,l,p);return k};return{version:"1.0.0",getDecryptedKeyHexByKeyIV:function(j,m,l,k){var i=f(m);return i(j,l,k)},parsePKCS5PEM:function(i){return c(i)},getKeyAndUnusedIvByPasscodeAndIvsalt:function(j,i,k){return g(j,i,k)},decryptKeyB64:function(i,k,j,l){return b(i,k,j,l)},getDecryptedKeyHex:function(r,q){var j=c(r);var m=j.type;var k=j.cipher;var i=j.ivsalt;var l=j.data;var p=g(k,q,i);var o=p.keyhex;var n=b(l,k,o,i);return n},getRSAKeyFromPlainPKCS8PEM:function(q){if(q.match(/ENCRYPTED/)){throw"pem shall be not ENCRYPTED"}if(!q.match(/BEGIN PRIVATE KEY/)){throw"pkcs8PEM doesn't include 'BEGIN PRIVATE KEY'"}var r=q;r=r.replace(/^-----BEGIN PRIVATE KEY-----/,"");r=r.replace(/^-----END PRIVATE KEY-----/,"");var m=r.replace(/\s+/g,"");var l=CryptoJS.enc.Base64.parse(m);var j=CryptoJS.enc.Hex.stringify(l);var k=ASN1HEX.getPosArrayOfChildren_AtObj(j,0);if(k.length!=3){throw"outer DERSequence shall have 3 elements: "+k.length}var n=ASN1HEX.getHexOfTLV_AtObj(j,k[1]);if(n!="300d06092a864886f70d0101010500"){throw"PKCS8 AlgorithmIdentifier is not rsaEnc: "+n}var n=ASN1HEX.getHexOfTLV_AtObj(j,k[1]);var i=ASN1HEX.getHexOfTLV_AtObj(j,k[2]);var o=ASN1HEX.getHexOfV_AtObj(i,0);var p=new RSAKey();p.readPrivateKeyFromASN1HexString(o);return p},addAlgorithm:function(i,k,j,l){}}}();